// *-----------------------------------------------------------------
// *
// * SCSS Layout Column
// *
// * @author      : Tafhimul Kabir
// * @version     : 0.0.01
// * @copyright   : Public Domain
// * @date        : 2023/10/21
// *
// * @description : This SCSS file contains mixin fore generating 
// *                responsive column.
// *
// *-----------------------------------------------------------------

// *-----------------------------------------------------------------
// * Generate Column
// *
// * This mixin generate responsive column.
// *-----------------------------------------------------------------
@mixin generate-column($column-number, $column-gap, $align-items: null, $justify-items: null, $column-type: 'even', $breakpoints: null) {
    display: grid;
    grid-template-columns: repeat(#{$column-number}, 1fr);
    gap: px2em($column-gap);

    @each $breakpoint, $config in $breakpoints {
        $mq-type:       map-get($config, 'mq-type');
        $mq-column:     map-get($config, 'col');
        $mq-gap:        map-get($config, 'gap');

        @if $mq-type == 'both' {
            @include mq($breakpoint) {
                @if $column-type == 'even' {
                    grid-template-columns: repeat(#{$mq-column}, 1fr);
                } @else if $column-type == 'mixed' {
                    grid-template-columns: $mq-column;
                }
                gap: px2em($mq-gap);
            }
        } @else if $mq-type == 'max' {
            @include mq-max($breakpoint) {
                @if $column-type == 'even' {
                    grid-template-columns: repeat(#{$mq-column}, 1fr);
                } @else if $column-type == 'mixed' {
                    grid-template-columns: $mq-column;
                }
                gap: px2em($mq-gap);
            }

        } @else if $mq-type == 'min' {
            @include mq-min($breakpoint) {
                @if $column-type == 'even' {
                    grid-template-columns: repeat(#{$mq-column}, 1fr);
                } @else if $column-type == 'mixed' {
                    grid-template-columns: $mq-column;
                }
                gap: px2em($mq-gap);
            }

        }
    }

    @if $align-items != null { 
        align-items: $align-items; 
    }

    @if $justify-items != null { 
        justify-items: $justify-items; 
    }
}
